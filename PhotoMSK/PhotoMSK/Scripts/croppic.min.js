(function (e, t) { Croppic = function (e, t) { var n = this; n.id = e; n.obj = $("#" + e); n.outputDiv = n.obj; n.options = { uploadUrl: "", uploadData: {}, cropUrl: "", cropData: {}, outputUrlId: "", imgEyecandy: true, imgEyecandyOpacity: .2, zoomFactor: 10, doubleZoomControls: true, modal: false, customUploadButtonId: "", loaderHtml: "", onBeforeImgUpload: null, onAfterImgUpload: null, onImgDrag: null, onImgZoom: null, onBeforeImgCrop: null, onAfterImgCrop: null, width: n.obj.width(), height: n.obj.height() }; for (i in t) n.options[i] = t[i]; n.init() }; Croppic.prototype = { id: "", imgInitW: 0, imgInitH: 0, imgW: 0, imgH: 0, objW: 0, objH: 0, windowW: 0, windowH: $(e).height(), obj: {}, outputDiv: {}, outputUrlObj: {}, img: {}, defaultImg: {}, croppedImg: {}, imgEyecandy: {}, form: {}, cropControlsUpload: {}, cropControlsCrop: {}, cropControlZoomMuchIn: {}, cropControlZoomMuchOut: {}, cropControlZoomIn: {}, cropControlZoomOut: {}, cropControlCrop: {}, cropControlReset: {}, cropControlRemoveCroppedImage: {}, modal: {}, loader: {}, init: function () { var e = this; e.objW = e.options.width; e.objH = e.options.height; if ($.isEmptyObject(e.defaultImg)) { e.defaultImg = e.obj.find("img") } e.createImgUploadControls(); e.bindImgUploadControl() }, createImgUploadControls: function () { var e = this; var t = ""; if (e.options.customUploadButtonId === "") { t = '<i class="cropControlUpload"></i>' } var n = '<i class="cropControlRemoveCroppedImage"></i>'; if ($.isEmptyObject(e.croppedImg)) { n = "" } var r = '<div class="cropControls cropControlsUpload"> ' + t + n + " </div>"; e.outputDiv.append(r); e.cropControlsUpload = e.outputDiv.find(".cropControlsUpload"); if (e.options.customUploadButtonId === "") { e.imgUploadControl = e.outputDiv.find(".cropControlUpload") } else { e.imgUploadControl = $("#" + e.options.customUploadButtonId); e.imgUploadControl.show() } if (!$.isEmptyObject(e.croppedImg)) { e.cropControlRemoveCroppedImage = e.outputDiv.find(".cropControlRemoveCroppedImage") } }, bindImgUploadControl: function () { var e = this; var n = '<form class="' + e.id + '_imgUploadForm" style="display: none; visibility: hidden;">  <input type="file" name="img">  </form>'; e.outputDiv.append(n); e.form = e.outputDiv.find("." + e.id + "_imgUploadForm"); e.imgUploadControl.off("click"); e.imgUploadControl.on("click", function () { e.form.find('input[type="file"]').trigger("click") }); if (!$.isEmptyObject(e.croppedImg)) { e.cropControlRemoveCroppedImage.on("click", function () { e.croppedImg.remove(); $(this).hide(); if (!$.isEmptyObject(e.defaultImg)) { e.obj.append(e.defaultImg) } if (e.options.outputUrlId !== "") { $("#" + e.options.outputUrlId).val("") } }) } e.form.find('input[type="file"]').change(function () { if (e.options.onBeforeImgUpload) e.options.onBeforeImgUpload.call(e); e.showLoader(); e.imgUploadControl.hide(); var n = new FormData(e.form[0]); for (var r in e.options.uploadData) { if (e.options.uploadData.hasOwnProperty(r)) { n.append(r, e.options.uploadData[r]) } } $.ajax({ url: e.options.uploadUrl, data: n, context: t.body, cache: false, contentType: false, processData: false, type: "POST" }).always(function (t) { var n = t; if (n.status == "success") { e.imgInitW = e.imgW = n.width; e.imgInitH = e.imgH = n.height; if (e.options.modal) { e.createModal() } if (!$.isEmptyObject(e.croppedImg)) { e.croppedImg.remove() } e.imgUrl = n.url; e.obj.append('<img src="' + n.url + '">'); e.initCropper(); e.hideLoader(); if (e.options.onAfterImgUpload) e.options.onAfterImgUpload.call(e) } if (n.status == "error") { e.obj.append('<p style="width:100%; height:100%; text-align:center; line-height:' + e.objH + 'px;">' + n.message + "</p>"); e.hideLoader(); setTimeout(function () { e.reset() }, 2e3) } }) }) }, createModal: function () { var e = this; var t = e.windowH / 2 - e.objH / 2; var n = '<div id="croppicModal">' + '<div id="croppicModalObj" style="width:' + e.objW + "px; height:" + e.objH + "px; margin:0 auto; margin-top:" + t + 'px; position: relative;"> </div>' + "</div>"; $("body").append(n); e.modal = $("#croppicModal"); e.obj = $("#croppicModalObj") }, destroyModal: function () { var e = this; e.obj = e.outputDiv; e.modal.remove() }, initCropper: function () { var e = this; e.img = e.obj.find("img"); e.img.wrap('<div class="cropImgWrapper" style="overflow:hidden; z-index:1; position:absolute; width:' + e.objW + "px; height:" + e.objH + 'px;"></div>'); e.createCropControls(); if (e.options.imgEyecandy) { e.createEyecandy() } e.initDrag(); e.initialScaleImg() }, createEyecandy: function () { var e = this; e.imgEyecandy = e.img.clone(); e.imgEyecandy.css({ "z-index": "0", opacity: e.options.imgEyecandyOpacity }).appendTo(e.obj) }, destroyEyecandy: function () { var e = this; e.imgEyecandy.remove() }, initialScaleImg: function () { var e = this; e.zoom(-e.imgInitW); e.zoom(40); e.img.css({ left: -(e.imgW - e.objW) / 2, top: -(e.imgH - e.objH) / 2, position: "relative" }); if (e.options.imgEyecandy) { e.imgEyecandy.css({ left: -(e.imgW - e.objW) / 2, top: -(e.imgH - e.objH) / 2, position: "relative" }) } }, createCropControls: function () { var e = this; var t = '<i class="cropControlZoomMuchIn"></i>'; var n = '<i class="cropControlZoomIn"></i>'; var r = '<i class="cropControlZoomOut"></i>'; var i = '<i class="cropControlZoomMuchOut"></i>'; var s = '<i class="cropControlCrop"></i>'; var o = '<i class="cropControlReset"></i>'; var u; if (e.options.doubleZoomControls) { u = '<div class="cropControls cropControlsCrop">' + t + n + r + i + s + o + "</div>" } else { u = '<div class="cropControls cropControlsCrop">' + n + r + s + o + "</div>" } e.obj.append(u); e.cropControlsCrop = e.obj.find(".cropControlsCrop"); if (e.options.doubleZoomControls) { e.cropControlZoomMuchIn = e.cropControlsCrop.find(".cropControlZoomMuchIn"); e.cropControlZoomMuchIn.on("click", function () { e.zoom(e.options.zoomFactor * 10) }); e.cropControlZoomMuchOut = e.cropControlsCrop.find(".cropControlZoomMuchOut"); e.cropControlZoomMuchOut.on("click", function () { e.zoom(-e.options.zoomFactor * 10) }) } e.cropControlZoomIn = e.cropControlsCrop.find(".cropControlZoomIn"); e.cropControlZoomIn.on("click", function () { e.zoom(e.options.zoomFactor) }); e.cropControlZoomOut = e.cropControlsCrop.find(".cropControlZoomOut"); e.cropControlZoomOut.on("click", function () { e.zoom(-e.options.zoomFactor) }); e.cropControlCrop = e.cropControlsCrop.find(".cropControlCrop"); e.cropControlCrop.on("click", function () { e.crop() }); e.cropControlReset = e.cropControlsCrop.find(".cropControlReset"); e.cropControlReset.on("click", function () { e.reset() }) }, initDrag: function () { var e = this; e.img.on("mousedown", function (t) { t.preventDefault(); var n = e.img.css("z-index"), r = e.img.outerHeight(), i = e.img.outerWidth(), s = e.img.offset().top + r - t.pageY, o = e.img.offset().left + i - t.pageX; e.img.css("z-index", 1e3).on("mousemove", function (t) { var u = t.pageY + s - r; var a = t.pageX + o - i; e.img.offset({ top: u, left: a }).on("mouseup", function () { $(this).removeClass("draggable").css("z-index", n) }); if (e.options.imgEyecandy) { e.imgEyecandy.offset({ top: u, left: a }) } if (parseInt(e.img.css("top")) > 0) { e.img.css("top", 0); if (e.options.imgEyecandy) { e.imgEyecandy.css("top", 0) } } var f = -(e.imgH - e.objH); if (parseInt(e.img.css("top")) < f) { e.img.css("top", f); if (e.options.imgEyecandy) { e.imgEyecandy.css("top", f) } } if (parseInt(e.img.css("left")) > 0) { e.img.css("left", 0); if (e.options.imgEyecandy) { e.imgEyecandy.css("left", 0) } } var l = -(e.imgW - e.objW); if (parseInt(e.img.css("left")) < l) { e.img.css("left", l); if (e.options.imgEyecandy) { e.imgEyecandy.css("left", l) } } if (e.options.onImgDrag) e.options.onImgDrag.call(e) }) }).on("mouseup", function () { e.img.off("mousemove") }).on("mouseout", function () { e.img.off("mousemove") }) }, zoom: function (e) { var t = this; var n = t.imgW / t.imgH; var r = t.imgW + e; var i = r / n; var s = true; if (r < t.objW || i < t.objH) { if (r - t.objW < i - t.objH) { r = t.objW; i = r / n } else { i = t.objH; r = n * i } s = false } if (r > t.imgInitW || i > t.imgInitH) { if (r - t.imgInitW < i - t.imgInitH) { r = t.imgInitW; i = r / n } else { i = t.imgInitH; r = n * i } s = false } t.imgW = r; t.img.width(r); t.imgH = i; t.img.height(i); var o = parseInt(t.img.css("top")) - e / 2; var u = parseInt(t.img.css("left")) - e / 2; if (o > 0) { o = 0 } if (u > 0) { u = 0 } var a = -(i - t.objH); if (o < a) { o = a } var f = -(r - t.objW); if (u < f) { u = f } if (s) { t.img.css({ top: o, left: u }) } if (t.options.imgEyecandy) { t.imgEyecandy.width(r); t.imgEyecandy.height(i); if (s) { t.imgEyecandy.css({ top: o, left: u }) } } if (t.options.onImgZoom) t.options.onImgZoom.call(t) }, crop: function () { var e = this; if (e.options.onBeforeImgCrop) e.options.onBeforeImgCrop.call(e); e.cropControlsCrop.hide(); e.showLoader(); var n = { imgUrl: e.imgUrl, imgInitW: e.imgInitW, imgInitH: e.imgInitH, imgW: e.imgW, imgH: e.imgH, imgY1: Math.abs(parseInt(e.img.css("top"))), imgX1: Math.abs(parseInt(e.img.css("left"))), cropH: e.objH, cropW: e.objW }; var r = new FormData; for (var i in n) { if (n.hasOwnProperty(i)) { r.append(i, n[i]) } } for (var i in e.options.cropData) { if (e.options.cropData.hasOwnProperty(i)) { n[i] = e.options.cropData[i] } } $.ajax({ url: e.options.cropUrl, data: n, context: t.body, cache: false, dataType: "json", type: "POST" }).always(function (t) { var n = t; if (n.status == "success") { e.imgEyecandy.hide(); e.destroy(); e.obj.append('<img class="croppedImg" src="' + n.url + '">'); if (e.options.outputUrlId !== "") { $("#" + e.options.outputUrlId).val(n.url) } e.croppedImg = e.obj.find(".croppedImg"); e.init(); e.hideLoader() } if (n.status == "error") { e.obj.append('<p style="width:100%; height:100%;>' + n.message + '</p>">') } if (e.options.onAfterImgCrop) e.options.onAfterImgCrop.call(e, t) }) }, showLoader: function () { var e = this; e.obj.append(e.options.loaderHtml); e.loader = e.obj.find(".loader") }, hideLoader: function () { var e = this; e.loader.remove() }, reset: function () { var e = this; e.destroy(); e.init(); if (!$.isEmptyObject(e.croppedImg)) { e.obj.append(e.croppedImg); if (e.options.outputUrlId !== "") { $("#" + e.options.outputUrlId).val(e.croppedImg.attr("url")) } } }, destroy: function () { var e = this; if (e.options.modal && !$.isEmptyObject(e.modal)) { e.destroyModal() } if (e.options.imgEyecandy && !$.isEmptyObject(e.imgEyecandy)) { e.destroyEyecandy() } if (!$.isEmptyObject(e.cropControlsUpload)) { e.cropControlsUpload.remove() } if (!$.isEmptyObject(e.cropControlsCrop)) { e.cropControlsCrop.remove() } if (!$.isEmptyObject(e.loader)) { e.loader.remove() } if (!$.isEmptyObject(e.form)) { e.form.remove() } e.obj.html("") } } })(window, document)